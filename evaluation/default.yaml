data_dirs: null  # List of Paths
output_dir: null # output filename is output_dir / experiment_name
experiment_name: null
depth: 1  # the depth of the trial dirs relative to the given data_dirs
output_types: [pdf, png, csv]  # choose all you want from {csv, pdf, png} and put it in brackets
last_instead_of_best: False  # use the last model, if not set the ebst model will be used
verbose: False  # debug prints
plot:
  # keeping the values on null -> automatically figure it out if possible
  x_axis: weight_decay  # hp on x axis
  y_axis: learning_rate  # hp on y axis
  metric: null  # is automatically chosen from task name, this will overwrite it
  limits: null  # sets the limits for the colormap, 2 ints, order does not matter
  std: False
  format: "2.3"  # string, how many digits to display, expects a value seperated by a dot (e.g. 2.3)
plotstyle:  # todo add configs for plotting
  text:
    usetex: True  # you can give latex code in the yaml: $\sqrt{\pi \cdot \sigma}$
  font:
    family: "serif"
    size: 8
  scale: 1.0  # scales *figsize* argument by this value
experiment_files:
  best_model: results_best_model.json
  last_model: results_final_model.json
  config: config.yaml
names:  # pretty names for the plot
  # optimizer
  adamw_baseline: AdamW
  sgd_baseline: SGD
  # metric
  test_acc: Accuracy (Test)
  # parameter
  learning_rate: Learning Rate
  # tasks
  classification: classification
  classification_small: classification_small
  detection: detection
  graph: graph
  graph_tiny: graph_tiny
  mnist: mnist
  segmentation: segmentation
  tabular: tabular
  template: template
  translation: translation
task_to_metric:  # maps task -> metric to plot
  classification: null # TODO
  classification_small: null # TODO
  detection: null # TODO
  graph: null # TODO
  graph_tiny: null # TODO
  mnist: null # TODO
  segmentation: null # TODO
  tabular: null # TODO
  template: null # TODO
  translation: null # TODO
